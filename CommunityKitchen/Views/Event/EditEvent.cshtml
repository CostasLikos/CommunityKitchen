@model Entities.Event

@{
    ViewBag.Title = "EditEvent";
}
<br />
<br />
<br />
@using (Html.BeginForm("EditEvent", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="default-form-area" style="display: flex; justify-content: center">
        <div id="contact-form" class="default-form">
            <h1 style="margin-left:100px;">Edit Event</h1>
            <div class="row clearfix" style="justify-content: center">
                <div class="col-md-12 col-sm-12 col-xs-6">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title)
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    @*photo*@
                    <div class="form-group">
                        @*@{string fullpath = Path.GetFullPath(Model.Photo);}*@
                        @Html.LabelFor(model => model.Photo)
                        @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address)
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @{ string shortDate = Model.EventDate.ToShortDateString(); }
                        @Html.LabelFor(model => shortDate)
                        @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @Value = @Model.EventDate.ToString("yyyy-MM-dd"), @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div>
                            <input type="submit" value="Save" class="thm-btn" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.ActionLink("Back to List", "OrganizeEvents")
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
